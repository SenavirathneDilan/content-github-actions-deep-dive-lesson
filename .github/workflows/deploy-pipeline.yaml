name: Deploy Lambda Function
on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  publish:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Relese from ${{ github.run_number }}
          body: New release for ${{ github.sha }}. Relase notes on the documentation site
          draft: false
          prerelease: false
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name : download Artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: Configure AWS Credentails
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-southeast-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://teir2-data-flink-c32e32rd

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
       - name: Configure AWS Credentails
         uses: aws-actions/configure-aws-credentials@v4
         with:
           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.SECRET_KEY }}
           aws-region: ap-southeast-1
       - name: update function code
         run: |
           aws lambda update-function-code \
           --function-name py-test \
           --s3-bucket teir2-data-flink-c32e32rd \
           --s3-key ${{ github.sha }}.zip \
           --publish
